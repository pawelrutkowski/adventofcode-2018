{"version":3,"sources":["Exercise/index.js","Day/index.js","Day02/index.js","App.js","serviceWorker.js","index.js","Day01/index.js"],"names":["getPerformance","func","data","t0","performance","now","result","Exercise","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","_handleOnCLick","_getPerformance","props","code","setState","inherits","createClass","key","value","_this2","fetch","dataPath","then","r","text","_this$state","react_default","a","createElement","name","prism","language","style","coy","toString","onClick","Component","mapExercises","index","Exercise_Exercise","assign","Day","_ref","day","exercises","map","input1","countedCharacters","split","object","character","undefined","toConsumableArray","Set","values","test","reduce","prev","next","tmp","forEach","element","asdasdasd","test1","countDiff","element1","element2","e1","e2","count","removeDiff","push","input","inputLength","index1","index2","_countDiff","join","Day02","Home","MainMenu","Link","to","App","BrowserRouter","App_MainMenu","Route","exact","path","component","Day01","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Day__WEBPACK_IMPORTED_MODULE_1__","part01","startValue","regex","emptyValue","eval","replace","part02","sequences","balance","isResult","Number","includes"],"mappings":"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","file":"static/js/main.83b43b6b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { coy } from \"react-syntax-highlighter/dist/styles/prism\";\n\nconst getPerformance = (func, data) => {\n  const t0 = performance.now();\n  const result = func(data);\n  const t1 = performance.now();\n\n  return {\n    result,\n    performance: t1 - t0\n  };\n};\n\nexport class Exercise extends Component {\n  state = {\n    data: null,\n    result: \"-\",\n    performance: \"-\"\n  };\n\n  componentDidMount() {\n    const toText = r => r.text();\n    const setDataState = data => {\n      this.setState({ data });\n    };\n\n    fetch(this.props.dataPath)\n      .then(toText)\n      .then(setDataState);\n  }\n\n  _handleOnCLick = () => {\n    const { data } = this.state;\n    const { result, performance } = getPerformance(this.props.code, data);\n    this.setState({ result, performance });\n  };\n\n  render() {\n    const { result, performance } = this.state;\n\n    return (\n      <div>\n        <p>Exercise {this.props.name}</p>\n        <p>Code:</p>\n        <SyntaxHighlighter language=\"javascript\" style={coy}>\n          {this.props.code.toString()}\n        </SyntaxHighlighter>\n        <br />\n        <button onClick={this._handleOnCLick}>run</button>\n        <p>Results: {result}</p>\n        <p>Performance: {performance} milliseconds</p>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Exercise } from \"../Exercise\";\n\nconst mapExercises = (props, index) => <Exercise key={`${index}`} {...props} />;\n\nexport const Day = ({ day, exercises }) => (\n  <div>\n    <p>Day {day}</p>\n    {exercises.map(mapExercises)}\n  </div>\n);\n\nexport default Day;\n","import React from \"react\";\nimport Day from \"../Day\";\n\nconst part01 = input1 => {\n  const countCharacters = value => {\n    const object = {};\n    for (let index = 0; index < value.length; index++) {\n      const character = value[index];\n      if (object[character] === undefined) {\n        object[character] = 1;\n      } else {\n        object[character] += 1;\n      }\n    }\n    return [...new Set(Object.values(object))];\n  };\n\n  const multiply = (prev, next) => prev * next;\n\n  const input = input1.split(\"\\n\");\n\n  const countedCharacters = input.map(countCharacters);\n  const test = {};\n  const sumOfCounters = (prev, next) => {\n    const tmp = prev;\n    next.forEach(element => {\n      const asdasdasd = `test${element}`;\n      if (tmp[asdasdasd] === undefined) {\n        tmp[asdasdasd] = 1;\n      } else {\n        tmp[asdasdasd] += 1;\n      }\n    });\n    return test;\n  };\n  const result = countedCharacters.reduce(sumOfCounters, test);\n\n  delete result.test1;\n\n  return Object.values(result).reduce(multiply, 1);\n};\n\nconst part02 = input1 => {\n  const countDiff = (element1, element2) => {\n    const e1 = element1.split(\"\");\n    const e2 = element2.split(\"\");\n    let count = 0;\n    for (let index = 0; index < e1.length; index++) {\n      if (e1[index] !== e2[index]) {\n        count += 1;\n        if (count > 2) {\n          return { count: 2 };\n        }\n      }\n    }\n    return { count, e1, e2 };\n  };\n\n  const removeDiff = (e1, e2) => {\n    const result = [];\n    for (let index = 0; index < e1.length; index++) {\n      if (e1[index] === e2[index]) {\n        result.push(e1[index]);\n      }\n    }\n    return result;\n  };\n\n  const input = input1.split(\"\\n\");\n\n  const inputLength = input.length;\n  for (let index1 = 0; index1 < inputLength - 1; index1++) {\n    const element1 = input[index1];\n    for (let index2 = index1 + 1; index2 < inputLength; index2++) {\n      const element2 = input[index2];\n      const { count, e1, e2 } = countDiff(element1, element2);\n      if (count < 2) {\n        return removeDiff(e1, e2).join(\"\");\n      }\n    }\n  }\n  return null;\n};\n\nconst props = {\n  day: \"02\",\n  exercises: [\n    {\n      name: \"01\",\n      dataPath: \"./data/data02.txt\",\n      code: part01\n    },\n    {\n      name: \"02\",\n      dataPath: \"./data/data02.txt\",\n      code: part02\n    }\n  ]\n};\n\nconst Day02 = () => <Day {...props} />;\n\nexport default Day02;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport Day01 from \"./Day01\";\nimport Day02 from \"./Day02\";\n\nconst Home = () => <div>Select day and check/run my solutions</div>;\n\nconst MainMenu = () => {\n  return (\n    <div>\n      <Link to=\"/adventofcode-2018/\">\n        <button>Home</button>\n      </Link>\n      <Link to=\"/adventofcode-2018/01\">\n        <button>Day 01</button>\n      </Link>\n      <Link to=\"/adventofcode-2018/02\">\n        <button>Day 02</button>\n      </Link>\n    </div>\n  );\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <header>\n            <h1>Welcome to Advent of code 2018</h1>\n            <h2>solutions by pawelrutkowski</h2>\n            <MainMenu />\n          </header>\n          <div>\n            <Route exact path=\"/adventofcode-2018/\" component={Home} />\n            <Route exact path=\"/adventofcode-2018/01\" component={Day01} />\n            <Route exact path=\"/adventofcode-2018/02\" component={Day02} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Day from \"../Day\";\n\nconst part01 = (input, startValue = \"0\") => {\n  const regex = /(\\r\\n\\t|\\n|\\r\\t)/gm;\n  const emptyValue = \"\";\n\n  return eval(startValue + input.replace(regex, emptyValue));\n};\n\nconst part02 = (input1, startValue = 0) => {\n  const input = input1.split(\"\\n\");\n  const sequences = [0];\n  let balance = startValue;\n  let isResult = true;\n  let result = null;\n\n  while (isResult) {\n    for (let index = 0; index < input.length; index++) {\n      const value = input[index];\n      if (value) {\n        balance += Number(value);\n        if (sequences.includes(balance)) {\n          isResult = false;\n          result = balance;\n          break;\n        } else {\n          sequences.push(balance);\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nconst props = {\n  day: \"01\",\n  exercises: [\n    {\n      name: \"01\",\n      dataPath: \"./data/data01.txt\",\n      code: part01\n    },\n    {\n      name: \"02\",\n      dataPath: \"./data/data01.txt\",\n      code: part02\n    }\n  ]\n};\n\nconst Day01 = () => <Day {...props} />;\n\nexport default Day01;\n"],"sourceRoot":""}